---

- name: Python install 3.11.3
  hosts: all
  remote_user: root
  become: yes

  vars:
    dir: /opt/python
    dir_python: /opt/python/Python-3.11.3
  tasks:
    - name: upgrade all packages
      yum: name=* state=latest
    - name: Install git, vim
      yum:
        name: "{{ item }}"
        state: latest
      loop:
        - git
        # - vim
        - htop 
        # - openssl-devel 
        # - libffi-devel 
        # - bzip2-devel 
        # - wget
        # - gcc
        # - yum-utils
        # - zlib-devel
        # - cmake
        # - pkgconfig
        # - openssl
        - zlib-devel
        - bzip2-devel
        - openssl-devel
        - ncurses-devel 
        - qlite-devel
        - zlib
        - libffi-devel
        - readline-devel
        - tk-devel
        - gdbm-devel
        - db4-devel
        - libpcap-devel
        - xz-devel
        - epel
        - openssl11-devel
      ignore_errors: true
    - name: install Development Tools
      yum: name="@Development Tools" state=latest update_cache=yes
    - name: download some_service_def init.d script
      get_url:
        url:  https://www.python.org/ftp/python/3.11.3/Python-3.11.3.tgz
        dest: "{{ dir }}"
      when: not ansible_check_mode
    - name: untar
      ansible.builtin.unarchive:
        src: "{{ dir }}/Python-3.11.3.tgz"
        dest: "{{ dir }}"
      become: yes
      become_user: root
    - name: untar
      ansible.builtin.shell: "sed -i 's/PKG_CONFIG openssl /PKG_CONFIG openssl11 /g' configure"
      args:
        chdir: "{{ dir_python}}"
      # become: yes
      # become_user: root
      when: not ansible_check_mode
    - name: conf
      # shell: ./configure  --enable-optimizations && make && make altinstall
      shell: ./configure  --enable-optimizations && make altinstall
      args:
        chdir: "{{ dir_python}}"
      when: not ansible_check_mode
    - name: pip self-update
      pip:
        name: pip3
        state: latest
    - name: Manually create the initial virtualenv
      command:
        cmd: "virtualenv {{ dir }}/venv -p python3.11"
        creates: "{{ dir }}/venv"
    - name: Install requirements
      pip: 
        requirements: "{{ dir }}/requirements.txt"
        virtualenv: "{{ dir }}/venv"
      tags:
        - pipinstall

    # - name: Remove
    #   yum:
    #     name: "{{ item }}"
    #     state: absent
    #   loop:
    #       - httpd
    #       - nginx
    #       - mysql 
    #   become: true
    # - name: Register Contents of PGDATA Folder
    #   shell: ls -la /var/
    #   register: pg_contents
    # - name: Register File Stat
    #   stat:
    #     path: /etc/nginx/nginx.conf
    #   register: stat_result
    # - debug: msg="{{ pg_contents.stdout }}"  
    # - name: download sources
    #   shell:
    #     - echo "asd"
    #     - hostname
    # - name: download sources
    #   get_url: url="https://www.python.org/ftp/python/3.9.5/Python-3.9.5.tgz"
    # - name: make
      # shell: groupinstall "Development Tools" -y
    # - name: Install git, vim
    #   yum:
    #     name:
    #       - openssl-devel
    #       - libffi-devel
    #       - bzip2-devel
    #     state: latest
    # - name: PIP install
    #   pip:
    #     name:
    #       - pyTelegramBotAPI
    #       - six
    #     executable: pip3
    #     state: present